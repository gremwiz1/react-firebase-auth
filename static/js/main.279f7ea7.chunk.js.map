{"version":3,"sources":["components/Auth.js","components/Home.js","components/Dashboard.js","components/Login.js","components/SignUp.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","React","createContext","AuthProvider","children","auth","getAuth","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","Provider","value","Home","useContext","to","Dashboard","history","useHistory","onClick","e","preventDefault","signOut","then","push","catch","error","alert","Login","onSubmit","target","elements","email","password","signInWithEmailAndPassword","userCredential","for","type","name","placeholder","SignUp","createUserWithEmailAndPassword","NotFound","goBack","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.279f7ea7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const auth = getAuth();\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n\r\n            setCurrentUser(user);\r\n\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst Home = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    return (\r\n        <>\r\n            <h1>Домашняя страница</h1>\r\n            {currentUser ? (\r\n                <p>\r\n                    Вы авторизованы - <Link to=\"/dashboard\">Панель мониторинга</Link>\r\n                </p>\r\n            ) : (\r\n                <p>\r\n                    <Link to=\"/login\">Войти</Link> or <Link to=\"/signup\">Зарегистрироваться</Link>\r\n                </p>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n    const auth = getAuth();\r\n    const history = useHistory();\r\n    const { currentUser } = useContext(AuthContext);\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        signOut(auth)\r\n            .then(() => {\r\n                history.push('/');\r\n            }).catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Привет</h1>\r\n            <p>Это панель мониторинга - если вы ее видите - значит вы авторизованы</p>\r\n            <button onClick={handleClick}>Выход</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React, { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst Login = () => {\r\n    const auth = getAuth();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = e.target.elements;\r\n\r\n        signInWithEmailAndPassword(auth, email.value, password.value)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            })\r\n    };\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser) {\r\n        return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Вход</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label for=\"email\">Почта</label>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Почта\" />\r\n                <label for=\"password\">Пароль</label>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                <button type=\"submit\">Войти</button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst SignUp = () => {\r\n    const auth = getAuth();\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = e.target.elements;\r\n        createUserWithEmailAndPassword(auth, email.value, password.value)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n                setCurrentUser(true);\r\n            }).catch((error) => {\r\n                alert(error);\r\n            })\r\n    };\r\n    if (currentUser) {\r\n        return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Регистрация</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label for=\"email\">Почта</label>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Почта\" />\r\n                <label for=\"password\">Пароль</label>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                <button type=\"submit\">Сохранить</button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction NotFound() {\r\n    const history = useHistory();\r\n    function handleClickLink() {\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <section >\r\n            <h1 >404</h1>\r\n            <p >Страница не найдена</p>\r\n            <Link to=\"\" onClick={handleClickLink} >Назад</Link>\r\n        </section>\r\n    )\r\n};\r\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport { AuthProvider } from \"./components/Auth\";\nimport { initializeApp } from \"firebase/app\";\nimport NotFound from \"./components/NotFound\";\n\nconst App = () => {\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBgWDb7VbzA1lCGNFhiHmularaUIMT1EKQ\",\n    authDomain: \"react-firebase-auth-58a34.firebaseapp.com\",\n    projectId: \"react-firebase-auth-58a34\",\n    storageBucket: \"react-firebase-auth-58a34.appspot.com\",\n    messagingSenderId: \"522063848203\",\n    appId: \"1:522063848203:web:aff18357b728499d11380e\",\n    measurementId: \"G-P0N25FV098\"\n  };\n  const app = initializeApp(firebaseConfig);\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}